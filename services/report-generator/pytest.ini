[tool:pytest]
# Pytest configuration for report-generator service
# TDD-optimized testing setup with coverage reporting

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Coverage configuration
addopts = 
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80
    --strict-markers
    --disable-warnings
    -v

# Coverage settings
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */alembic/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test markers
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (may use external resources)
    e2e: End-to-end tests (full workflow)
    slow: Tests that take more than 1 second
    mock: Tests using mock objects
    real: Tests using real dependencies
