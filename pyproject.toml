[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "charlie-reporting"
version = "0.1.0"
description = "Daily Report Automation ETL tool for CSV/Excel data transformation and reporting."
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pandas>=2.0.0",
    "openpyxl>=3.1.0",
    "pywin32>=306; sys_platform == 'win32'",
    "tomli; python_version < '3.11'",
    "pytest>=7.0.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--maxfail=3 --disable-warnings"

[project.optional-dependencies]
dev = [
    "pytest",
    "black",
    "flake8",
    "ruff",
    "pylint",
    "mypy",
    "interrogate",
    "pydoclint",
    "pyright",
]

[tool.ruff]
target-version = "py312"
line-length = 120
extend-exclude = [
    "venv",
    ".venv",
    "build",
    "dist",
    ".mypy_cache",
    ".ruff_cache",
    "services/database-service",
    "tools",
    "archive",
    "demo",
    "docs",
]

[tool.ruff.lint]
select = ["E","F","I","UP","B","C4","SIM","PL","PT","D","S","T20","ANN","TID","C90"]
ignore = ["S101","TID252"] # Allow use of 'assert'; temporarily allow relative imports pending package refactor

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true


[tool.mypy]
python_version = "3.12"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
show_error_codes = true
pretty = true
# Exclude problematic or legacy paths (hyphenated service to be renamed; legacy tooling noise)
exclude = '^(venv|.venv|build|dist|services/database-service|tools|archive|demo|docs)/'
# Pydantic plugin for v2 supports type checking of Pydantic models
plugins = ["pydantic.mypy"]
explicit_package_bases = true
mypy_path = ["foundation/src"]

[tool.interrogate]
fail-under = 100
verbose = 0
quiet = false
color = true
whitelist-regex = []
ignore-init-method = true
ignore-init-module = true
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = false
ignore-private = false
ignore-property-decorators = false
exclude = ["tests", "venv", ".venv", "build", "dist"]

[tool.pydoclint]
style = "google"
allow-init-docstring = true
require-return-section-when-returning-value = true
require-return-section-when-no-return-value = false
require-yields-section-when-yielding-value = true
require-yields-section-when-no-yield-value = false
skip-checking-short-docstrings = true
allow-section-blank-line = true
check-return-types = true
check-yields-types = true
check-raises-types = true
exclude = ["tests", "venv", ".venv", "build", "dist"]
